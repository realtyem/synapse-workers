# This file contains the base config for the reverse proxy, as part of ../Dockerfile-workers.
# configure_workers_and_start.py uses and amends to this file depending on the workers
# that have been selected.

log_format backend '[$time_local] - $proxy_add_x_forwarded_for - URT:$upstream_response_time request_time $request_time $status $upstream_addr: $request';

upstream main_synapse_process {
    zone upstreams 64K;
    server localhost:{{ main_proxy_pass_cli_port }};

    keepalive 2;
}

{{ upstream_directives }}

server {
    # Listen on an unoccupied port number, traditionally 8008. This is pulled in from
    # your existing(or just created) homeserver.yaml file. This should allow you to not
    # have to change any ports set up in your docker image
    listen {{ original_client_listener_port or '8008' }};
    listen [::]:{{ original_client_listener_port or '8008' }};

{% if tls_cert_path is not none and tls_key_path is not none %}
    # this allows for:
    # 1. Piping in a federation port directly if you have TlS certs in place. This is
    #    no longer recommended practice, as TLS validation in Synapse isn't the best.
    #    You should be using an external reverse proxy for this, such as NPM or swag.
    # 2. Backwards compatibility with Complement, which sets up TLS certs for tests
    listen 8448 ssl;
    listen [::]:8448 ssl;

    ssl_certificate {{ tls_cert_path }};
    ssl_certificate_key {{ tls_key_path }};

    # Some directives from cipherlist.eu (fka cipherli.st):
    ssl_protocols TLSv1 TLSv1.1 TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers on;
    ssl_ciphers "EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH";
    ssl_ecdh_curve secp384r1; # Requires nginx >= 1.1.0
    ssl_session_cache shared:SSL:10m;
    ssl_session_tickets off; # Requires nginx >= 1.5.9
{% endif %}

    server_name localhost;

    # access_log /data/logs/synapse.log backend;
    access_log /dev/stdout backend;
    error_log stderr warn;

    # Nginx by default only allows file uploads up to 1M in size
    # Increase client_max_body_size to match max_upload_size defined in homeserver.yaml
    client_max_body_size 100M;

    # Synapse chunks responses according to the docs. We also want to use the keepalive
    # feature, so we need both of these globally.
    proxy_http_version 1.1;
    proxy_set_header "Connection" "";

{{ worker_locations }}

    # Send all other traffic to the main process. This is safe, in the case of
    # /_synapse/replication/, because it is actually on a different port.
    location ~* ^(\\/_matrix|\\/_synapse) {
        # This is proxied into the upstream defined above to take advantage of
        # features inherent from HTTP 1.1
        proxy_pass http://main_synapse_process;
        proxy_set_header X-Forwarded-For $remote_addr;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header Host $host;
    }
}
